环境配置:
# 如果需要处理Excel数据需要安装xlrd库
pip install xlrd >= 1.0.0
# 需要向excel写入数据需要安装openpyxl库
pip install openpyxl

注意事项:
词库需要处理成utf-8编码的文本

# jieba
    https://blog.csdn.net/qq_34337272/article/details/79554772
    https://blog.csdn.net/li_31415/article/details/48660073
# 词库
    https://github.com/fighting41love/funNLP
# 词性对照表
    https://www.cnblogs.com/adienhsuan/p/5674033.html
    本地的tool_kit/词性对照释义表.csv也是该内容

技术点:
+ 停用词库
+ 否定词
+ 组合词  # 19.16/万人  # /省/审计/厅/审计
+ 特殊符号  # 《aaaaaa》、“bbbbb”


+ 添加停用词库
+ 添加自定义词典，解决特殊词问题
    + 多种类词典
        + 可以设置多种词典，针对不同的问题使用不同的词典
    + 多级配置
        + 目前思路是三级词典,根据优先级: 用户自定义词典>分类词典>默认词典
        + 其中默认词典可能不需要，根据具体情况定
        + 停用词词典的优先级应在用户自定义词典后
    + 支持热配置，
+ 分词逻辑处理优先级
    + 特殊符号内内容>用户自定义词典>停用词词典>自定义分词算法>分类词典>默认词典>算法分词
+ 分词系统行为优先级 (需要了解分词算法内部实现后才可以给出准确的结果，当前想法为)
    + 第一种可能:
        1. 按优先级合并词典
            + 分词词典 = ((分类词典 + 默认词典)) + 用户自定义词典
            + 停用词词典 = 停用词词典 - 用户自定义词典
        2. 分词
            + 该操作可以放在特殊字符提取后，
                + 好处是不会处理到特殊符号内的内容，提高效率，
                + 缺点是会把文章拆成多段处理
        3. 使用自定义算法试图将更多词合并或拆分
            + 如将数字和量词组合成带单位的数字，再将其与紧接其后的名词结合组成带数量、单位的实体
            + 该操作可以放在特殊字符提取后，
                + 好处是不会处理到特殊符号内的内容，提高效率，
                + 缺点是会把文章拆成多段处理
        4. 提取特殊符号内内容
        5. 其他分词 = 剩余词 - 停用词库
        6. 分词结果 = 4 + 5

