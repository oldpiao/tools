断点调试
	+ F7  # 单步调试
	+ F8  # 单步调试不进入函数
	+ F9  # 到下一个断点
	+ https://www.jianshu.com/p/64a45714c58c

国内pip
	+ https://blog.csdn.net/weixin_41004350/article/details/78780527
	+ 豆瓣：http://pypi.douban.com/simple/
 	+ 清华：https://pypi.tuna.tsinghua.edu.cn/simple
	+ 例：pip install -i https://pypi.tuna.tsinghua.edu.cn/simple requests

jupyter添加Python内核
	+ https://blog.csdn.net/qq_24924689/article/details/82950676
	+ https://blog.csdn.net/wangwangstone/article/details/96570064
	+ 在目标环境安装ipykernel：pip install ipykernel  # 慢可以用国内源, conda虚拟环境此步骤后就已经添加到notebook了
	+ 第一种：已有环境
		+ activate env_name
		+ python -m ipykernel install --name env_name
	+ 第二种：新建环境
		+ conda create -n Python27 python=2.7 ipykernel	#在创建环境时为其安装ipykernel
git
	+ https://www.liaoxuefeng.com/wiki/896043488029600/900003767775424

# pip freee的意思是查看当前python安装了哪些库，保存在requirements.txt 中
pip freeze > requirements.txt 
# 从当前环境的网络中下载requirements.txt 中写的包，下载到当前目录下的pip_packages目录中，这时候你会发现，里面有很多依赖，还有一些whl文件
pip download  -r requirements.txt  -d  ./pip_packages    

pip install --no-index --find-links=d:\packages -r requirements.txt
# --find-links指定的是包文件的存放地址，-r指定的是txt文件的位置

# 构建pip包
https://www.cnblogs.com/gongdiwudu/p/11070798.html
https://blog.csdn.net/wc781708249/article/details/79596741
https://www.cnblogs.com/potato-chip/p/9106225.html

# setup.py

import setuptools

with open("README.md", "r") as fh:
    long_description = fh.read()

setuptools.setup(
    name="example-pkg-your-username",
    version="0.0.1",
    author="Example Author",
    author_email="author@example.com",
    description="A small example package",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/pypa/sampleproject",
    packages=setuptools.find_packages(),
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
    ],
)

# 创建tar.gz包(sdist)和.whl包(bdist_wheel)
python setup.py sdist bdist_wheel


# django中redis配置有问题时的解决办法（密码验证不通过）
	+ https://blog.csdn.net/weixin_44520259/article/details/93388802